<%- include('includes/header') %>

<!-- Cropper -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

      <div class="main-panel">
        <div class="content-wrapper">
            <div class="row">
                <div class="col-12 col-xl-8 mb-4 mb-xl-0">
                    <h3 class="font-weight-bold">Add Product
                    </h3>
                    <h6 class="font-weight-normal mb-4">Add a new product with necessary details</h6>
                </div>
            </div>
            

            <div class="row">
                <form class="forms-sample" id="addite" style="display: contents;" action="/admin/update-product?id=<%= data._id %>" 
                method="post" enctype="multipart/form-data">
                    <div class="col-md-5 grid-margin stretch-card">
                        <div class="card">
                          <div class="card-body">
                              <input type="file" id="id_image2"  name="image1" accept="image/*" class="form-control" onchange="viewImage2(event)"
                              style="width:100%;"><br>
                              <img src="<%=data.image1%>" id="img1" class="" alt="" style="height:100px">
                            <img src="" id="imgView2" class="clr" alt="" style="height:100px">
                            
                            

                            <h5 class="error_form text-danger" id="image2_error_message"></h5>
                            <div  id="image2container" style="display:flex">
                              <div id="image-box2" class="image-container clr" style="height: 300px; width:20%"></div>
                              <button type="button" class="btn btn-outline-info" id="crop-btn2" style=" margin-top: 10px; display: none;
                                    width:  50% ; margin: 20rem 0rem 0rem 0rem;">Crop</button>
                            </div>
                          </div>
                          <div class="card-body">
                            <input type="file" id="id_image3"  name="image2" accept="image/*" class="form-control" onchange="viewImage3(event)"
                            style="width:100%;"><br>
                            <img src="<%=data.image2%>" id="img2" class="" alt="" style="height:100px">
                          <img src="" id="imgView3" class="clr" alt="" style="height:100px">
                         
                          
                          <h5 class="error_form text-danger" id="image3_error_message"></h5>
                          <div  id="image3container" style="display:flex">
                            <div id="image-box3" class="image-container clr" style="height: 300px; width:20%"></div>
                            <button type="button" class="btn btn-outline-info" id="crop-btn3" style=" margin-top: 10px; display: none;
                                  width:  50% ; margin: 20rem 0rem 0rem 0rem;">Crop</button>
                          </div>
                        </div>
                        <div class="card-body">
                          <input type="file" id="id_image1"  name="image3" accept="image/*" class="form-control" onchange="viewImage1(event)"
                          style="width:100%;"><br>
                          <img src="<%=data.image3%>" id="img3" class="" alt="" style="height:100px">
                        <img src="" id="imgView1" class="clr" alt="" style="height:100px">
                       
                        
                        <h5 class="error_form text-danger" id="image1_error_message"></h5>
                        <div  id="image1container" style="display:flex">
                          <div id="image-box1" class="image-container clr" style="height: 300px; width:20%"></div>
                          <button type="button" class="btn btn-outline-info" id="crop-btn1" style=" margin-top: 10px; display: none;
                                width:  50% ; margin: 20rem 0rem 0rem 0rem;">Crop</button>
                        </div>
                      </div>
                        </div>
                    </div>
                    <div class="col-md-7 grid-margin stretch-card">
                      <div class="card">
                          <div class="card-body">
                              <p class="card-title mb-2">Add Products</p>
                              <div class="form-group">
                                  <label >Product Name</label>
                                  <input type="text" class="form-control form-control-sm" name="name"
                                       id="product_name"
                                      placeholder="Enter product name" maxlength="20"  value="<%=data.productName%>" >
                                  
                              </div>
                              <div class="form-group">
                                  <label >Product
                                      Description</label>
                                  <textarea type="text" class="form-control form-control-sm"
                                  name="description" id=""  value="<%=data.description%>" id="product_description"
                                      placeholder="Enter product description" rows="3" maxlength="150"
                                      ></textarea>
                              </div>
                              <div class="col-md-12 p-0 d-flex justify-content-between">
                                  <div class="form-group col-5 p-0">
                                      <label >
                                          Category</label>
                                          <select class="form-control form-control-sm" name="categories" style="color: black;">
                                              <% for (var i =0;i< categoryItems.length;i++){%>
                                             
                                              
                                                  <option value="<%=categoryItems[i]._id%>" ><%=categoryItems[i].category%></option>
                                                       
                                              <%}%>
                                                
                                          </select>
                                  </div>
                                  <div class="form-group col-5 p-0">
                                      <label >Quantity</label>
                                      <input type="text" class="form-control form-control-sm"
                                          name="quantity" id="product_quantity"
                                          value="<%=data.quantity%>"
                                          placeholder="Enter Product Quantity" >
                                  </div>
                              </div>
                              <div class="col-md-12 p-0 d-flex justify-content-between">
                              <div class="form-group col-5 p-0">
                                  <label >Product
                                      Brand</label>
                                  <input type="text" name="brand" class="form-control form-control-sm"
                                  value="<%=data.brand%>" id="product_price"
                                      placeholder="Enter product price" >
                              </div>
                              <div class="form-group col-3 p-0">
                                  <label >Product
                                      Price</label>
                                  <input type="text" name="price" class="form-control form-control-sm"
                                  value="<%=data.price%>" id="product_price"
                                      placeholder="Enter product price" >
                              </div>
                              <div class="form-group col-3 p-0">
                                  <label >offer
                                      Price</label>
                                  <input type="text" name="offerprice" class="form-control form-control-sm"
                                  value="<%=data.offerPrice%>" id="product_price"
                                      placeholder="Enter product price" >
                              </div>
                              </div>
                              <!-- <div class="col-md-12 p-0 d-flex justify-content-between">
                                  <div class="form-group col-md-3 p-0">
                                    <label for="">Small</label>
                                    <input type="number" name="small" class="form-control form-control-sm"
                                        id="product_price" value="<%=data.small%>"  placeholder="enter quantity">
                                </div>
                                <div class="form-group col-md-3 p-0">
                                  <label for="">Medium</label>
                                  <input type="number" name="medium" class="form-control form-control-sm"
                                      id="product_price"  value="<%=data.medium%>"  placeholder="enter quantity">
                              </div> -->
                              
                                  <!-- <div class="form-group col-md-3 p-0">
                                      <label for="">Large</label>
                                      <input type="number" name="large" class="form-control form-control-sm"
                                          id="product_price"  value="<%=data.large%>" placeholder="enter quantity">
                                  </div> -->
                                  </div>
                              <div class="d-flex justify-content-between p-0">
                                  <div class="col-6" style="padding-left: 0px;">
                                      <button type="submit" class="btn badge-success mr-2" style="width: 100%;">Update</button>
                                  </div>
                                  <div class="col-6" style="padding-right: 0px;">
                                      <input type="hidden" name="product_id" id="product_id"
                                          value="">
                                          <a href="/admin/product-details" class="btn btn-light" style="width: 100%;">Cancel</a>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
                </form>

                <style>
                  .error{
                    color: red;
                  }
                </style>
            </div>
        </div>
    </div>
    <!-- content-wrapper ends -->
</div>

<!--home  -->


<style>
  .clr{
    display: none;
  }
</style>
<script>

    
    const imagebox2 = document.getElementById('image-box2')
    const crop_btn2 = document.getElementById('crop-btn2')
    const input2 = document.getElementById('id_image2')
    function viewImage2(event) {
      document.getElementById('img1').style.display = 'none'
    var fileInput2 = document.getElementById('id_image2');
    var filePath2 = fileInput2.value;
    var allowedExtensions = /(\.jpg)$/i;
    // if (!allowedExtensions.exec(filePath2)) {
    //   fileInput1.value = '';
    //   swal("There is a problem!", "Please choose image file.");
    //   return false;
    // } else {}
      document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
    
    }
    // When user uploads the image this event will get triggered
    input2.addEventListener('change', () => {
    // Getting image file object from the input variable
    const img_data2 = input2.files[0]
    // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
    // The new object URL represents the specified File object or Blob object.
    const url2 = URL.createObjectURL(img_data2)
    // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    imagebox2.innerHTML = `<img src="${url2}" id="image2" style="width:100%;">`
    // Storing that cropping view image in a variable
    const image2 = document.getElementById('image2')
    // Displaying the image box
    document.getElementById('image-box2').style.display = 'block'
    // Displaying the Crop buttton
    document.getElementById('crop-btn2').style.display = 'block'
    
    document.getElementById('imgView2').style.display = 'block'
    // Hiding the Post button
    const cropper2 = new Cropper(image2, {
      autoCropArea: 1,
      viewMode: 1,
      scalable: false,
      zoomable: false,
      movable: false,
      minCropBoxWidth: 50,
      minCropBoxHeight: 50,
      aspectRatio: 1 / 1,
    
    })
    // When crop button is clicked this event will get triggered
    crop_btn2.addEventListener('click', () => {
      // This method coverts the selected cropped image on the cropper canvas into a blob object
      cropper2.getCroppedCanvas().toBlob((blob) => {
        // Gets the original image data
        let fileInputElement2 = document.getElementById('id_image2');
        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
        let file2 = new File([blob], img_data2.name, { type: "image/*", lastModified: new Date().getTime() });
        // Create a new container
        let container2 = new DataTransfer();
        // Add the cropped image file to the container
        container2.items.add(file2);
        // Replace the original image file with the new cropped image file
        fileInputElement2.files = container2.files;
        document.getElementById('imgView2').src = URL.createObjectURL(fileInputElement2.files[0])
        // Hide the cropper box
        document.getElementById('image-box2').style.display = 'none'
        // Hide the crop button
        document.getElementById('crop-btn2').style.display = 'none'
      })
    })
    })
    
    
    
    
    
    
    
    const imagebox3 = document.getElementById('image-box3')
    const crop_btn3 = document.getElementById('crop-btn3')
    const input3 = document.getElementById('id_image3')
    function viewImage3(event) {
      document.getElementById('img2').style.display = 'none'
    var fileInput3 = document.getElementById('id_image3');
    var filePath3 = fileInput3.value;
    var allowedExtensions = /(\.jpg)$/i;
    // if (!allowedExtensions.exec(filePath3)) {
    //   fileInput3.value = '';
    //   swal("There is a problem!", "Please choose image file.");
    //   return false;
    // } else {
    // }
      document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
    
    }
    // When user uploads the image this event will get triggered
    input3.addEventListener('change', () => {
    // Getting image file object from the input variable
    const img_data3 = input3.files[0]
    // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
    // The new object URL represents the specified File object or Blob object.
    const url3 = URL.createObjectURL(img_data3)
    // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    imagebox3.innerHTML = `<img src="${url3}" id="image3" style="width:100%;">`
    // Storing that cropping view image in a variable
    const image3 = document.getElementById('image3')
    // Displaying the image box
    document.getElementById('image-box3').style.display = 'block'
    // Displaying the Crop buttton
    document.getElementById('crop-btn3').style.display = 'block'
    // Hiding the Post button
    const cropper3 = new Cropper(image3, {
      autoCropArea: 1,
      viewMode: 1,
      scalable: false,
      zoomable: false,
      movable: false,
      minCropBoxWidth: 50,
      minCropBoxHeight: 50,
      
        aspectRatio: 1 / 1,
       
    
    })
    
    // When crop button is clicked this event will get triggered
    crop_btn3.addEventListener('click', () => {
      // This method coverts the selected cropped image on the cropper canvas into a blob object
      cropper3.getCroppedCanvas().toBlob((blob) => {
        // Gets the original image data
        let fileInputElement3 = document.getElementById('id_image3');
        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
        let file3 = new File([blob], img_data3.name, { type: "image/*", lastModified: new Date().getTime() });
        // Create a new container
        let container3 = new DataTransfer();
        // Add the cropped image file to the container
        container3.items.add(file3);
        // Replace the original image file with the new cropped image file
        fileInputElement3.files = container3.files;
        document.getElementById('imgView3').src = URL.createObjectURL(fileInputElement3.files[0])
        // Hide the cropper box
        document.getElementById('image-box3').style.display = 'none'
        // Hide the crop button
        document.getElementById('crop-btn3').style.display = 'none'
    
        document.getElementById('imgView3').style.display = 'block'
      })
    })
    })
    


       
    const imagebox1 = document.getElementById('image-box1')
    const crop_btn1 = document.getElementById('crop-btn1')
    const input1 = document.getElementById('id_image1')
    function viewImage1(event) {
      document.getElementById('img3').style.display = 'none'
    var fileInput1 = document.getElementById('id_image1');
    var filePath1 = fileInput1.value;
    var allowedExtensions = /(\.jpg)$/i;
    // if (!allowedExtensions.exec(filePath1)) {
    //   fileInput1.value = '';
    //   swal("There is a problem!", "Please choose image file.");
    //   return false;
    // } else {
    // }
      document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
    
    }
    // When user uploads the image this event will get triggered
    input1.addEventListener('change', () => {
    // Getting image file object from the input variable
    const img_data1 = input1.files[0]
    // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
    // The new object URL represents the specified File object or Blob object.
    const url1 = URL.createObjectURL(img_data1)
    // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
    imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:100%;">`
    // Storing that cropping view image in a variable
    const image1 = document.getElementById('image1')
    // Displaying the image box
    document.getElementById('image-box1').style.display = 'block'
    // Displaying the Crop buttton
    document.getElementById('crop-btn1').style.display = 'block'
    
    document.getElementById('imgView1').style.display = 'block'
    // Hiding the Post button
    const cropper1 = new Cropper(image1, {
      autoCropArea: 1,
      viewMode: 1,
      scalable: false,
      zoomable: false,
      movable: false,
      minCropBoxWidth: 50,
      minCropBoxHeight: 50,
      aspectRatio: 1 / 1,
    
    })
    // When crop button is clicked this event will get triggered
    crop_btn1.addEventListener('click', () => {
      // This method coverts the selected cropped image on the cropper canvas into a blob object
      cropper1.getCroppedCanvas().toBlob((blob) => {
        // Gets the original image data
        let fileInputElement1 = document.getElementById('id_image1');
        // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
        let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
        // Create a new container
        let container1 = new DataTransfer();
        // Add the cropped image file to the container
        container1.items.add(file1);
        // Replace the original image file with the new cropped image file
        fileInputElement1.files = container1.files;
        document.getElementById('imgView1').src = URL.createObjectURL(fileInputElement1.files[0])
        // Hide the cropper box
        document.getElementById('image-box1').style.display = 'none'
        // Hide the crop button
        document.getElementById('crop-btn1').style.display = 'none'
      })
    })
    })
    
    
    
    
    </script>

  <%- include('includes/footer') %>